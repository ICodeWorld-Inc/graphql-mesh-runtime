extend type Handler {
  """
  Handler for remote/local/third-party GraphQL schema
  """
  graphql: GraphQLHandler
}

type GraphQLHandler @md {
  """
  A url or file path to your remote GraphQL endpoint.
  If you provide a path to a code file(js or ts),
  other options will be ignored and the schema exported from the file will be used directly.
  """
  endpoint: String!
  """
  JSON object representing the Headers to add to the runtime of the API calls only for schema introspection
  You can also provide `.js` or `.ts` file path that exports schemaHeaders as an object
  """
  schemaHeaders: Any
  """
  JSON object representing the Headers to add to the runtime of the API calls only for operation during runtime
  """
  operationHeaders: JSON
  """
  Use HTTP GET for Query operations
  """
  useGETForQueries: Boolean
  """
  HTTP method used for GraphQL operations
  """
  method: GraphQLHandlerHTTPMethod
  """
  Path to a custom W3 Compatible Fetch Implementation
  """
  customFetch: Any
  """
  Path to a custom W3 Compatible WebSocket Implementation
  """
  webSocketImpl: String
  """
  Path to the introspection
  You can seperately give schema introspection
  """
  introspection: String
  """
  Enable multipart/formdata in order to support file uploads
  """
  multipart: Boolean
  """
  Batch requests
  """
  batch: Boolean
  """
  SSE - Server Sent Events
  WS - New graphql-ws
  LEGACY_WS - Legacy subscriptions-transport-ws
  """
  subscriptionsProtocol: SubscriptionProtocol
}

enum SubscriptionProtocol {
  SSE
  WS
  LEGACY_WS
}

enum GraphQLHandlerHTTPMethod {
  GET
  POST
}
